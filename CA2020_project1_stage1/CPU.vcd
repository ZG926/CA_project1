$date
	Sun Dec 13 22:02:45 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TestBench $end
$var reg 1 ! Clk $end
$var reg 1 " Reset $end
$var reg 1 # Start $end
$var integer 32 $ counter [31:0] $end
$var integer 32 % flush [31:0] $end
$var integer 32 & i [31:0] $end
$var integer 32 ' outfile [31:0] $end
$var integer 32 ( stall [31:0] $end
$scope module CPU $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 # start_i $end
$var wire 32 ) instr [31:0] $end
$var wire 32 * SignExtend_Result [31:0] $end
$var wire 32 + ShiftLeft_Result [31:0] $end
$var wire 32 , RS2data [31:0] $end
$var wire 32 - RS1data [31:0] $end
$var wire 32 . PC_o [31:0] $end
$var wire 32 / PC_Four [31:0] $end
$var wire 32 0 PC_Branch [31:0] $end
$var wire 32 1 MemRead_Result [31:0] $end
$var wire 32 2 MUX_PC_Result [31:0] $end
$var wire 32 3 MUX_MemtoReg_Result [31:0] $end
$var wire 32 4 MUX_ALUSRC_Result [31:0] $end
$var wire 1 5 MEMWB_RegWrite $end
$var wire 5 6 MEMWB_RDAddr [4:0] $end
$var wire 1 7 MEMWB_MemtoReg $end
$var wire 32 8 MEMWB_MemReadData [31:0] $end
$var wire 32 9 MEMWB_ALUResult [31:0] $end
$var wire 32 : IFID_pc [31:0] $end
$var wire 32 ; IFID_instr [31:0] $end
$var wire 10 < IDEX_funct [9:0] $end
$var wire 32 = IDEX_SignExtend [31:0] $end
$var wire 1 > IDEX_RegWrite $end
$var wire 32 ? IDEX_RS2Data [31:0] $end
$var wire 5 @ IDEX_RS2Addr [4:0] $end
$var wire 32 A IDEX_RS1Data [31:0] $end
$var wire 5 B IDEX_RS1Addr [4:0] $end
$var wire 5 C IDEX_RDAddr [4:0] $end
$var wire 1 D IDEX_MemtoReg $end
$var wire 1 E IDEX_MemWrite $end
$var wire 1 F IDEX_MemRead $end
$var wire 1 G IDEX_ALUSrc $end
$var wire 2 H IDEX_ALUOp [1:0] $end
$var wire 1 I Equal_Result $end
$var wire 1 J EXMEM_RegWrite $end
$var wire 5 K EXMEM_RDAddr [4:0] $end
$var wire 1 L EXMEM_MemtoReg $end
$var wire 32 M EXMEM_MemWriteData [31:0] $end
$var wire 1 N EXMEM_MemWrite $end
$var wire 1 O EXMEM_MemRead $end
$var wire 32 P EXMEM_ALUResult [31:0] $end
$var wire 1 Q Ctrl_RegWrite $end
$var wire 1 R Ctrl_MemtoReg $end
$var wire 1 S Ctrl_MemWrite $end
$var wire 1 T Ctrl_MemRead $end
$var wire 1 U Ctrl_Branch $end
$var wire 1 V Ctrl_ALUSrc $end
$var wire 2 W Ctrl_ALUOp [1:0] $end
$var wire 1 X And_Result $end
$var wire 32 Y ALU_Result [31:0] $end
$var wire 4 Z ALUCtrl [3:0] $end
$scope module ALU $end
$var wire 32 [ data2_i [31:0] $end
$var wire 32 \ data1_i [31:0] $end
$var wire 4 ] ALUCtrl_i [3:0] $end
$var reg 32 ^ data_o [31:0] $end
$upscope $end
$scope module ALU_Control $end
$var wire 10 _ funct_i [9:0] $end
$var wire 2 ` ALUOp_i [1:0] $end
$var reg 4 a ALUCtrl_o [3:0] $end
$upscope $end
$scope module Add_Branch $end
$var wire 32 b data_o [31:0] $end
$var wire 32 c data2_in [31:0] $end
$var wire 32 d data1_in [31:0] $end
$upscope $end
$scope module Add_PC $end
$var wire 32 e data2_in [31:0] $end
$var wire 32 f data_o [31:0] $end
$var wire 32 g data1_in [31:0] $end
$upscope $end
$scope module And $end
$var wire 1 X data_o $end
$var wire 1 I data2_i $end
$var wire 1 U data1_i $end
$upscope $end
$scope module Control $end
$var wire 7 h Op_i [6:0] $end
$var reg 2 i ALUOp_o [1:0] $end
$var reg 1 V ALUSrc_o $end
$var reg 1 U Branch_o $end
$var reg 1 T MemRead_o $end
$var reg 1 S MemWrite_o $end
$var reg 1 R MemtoReg_o $end
$var reg 1 Q RegWrite_o $end
$upscope $end
$scope module Data_Memory $end
$var wire 1 ! clk_i $end
$var wire 32 j data_o [31:0] $end
$var wire 32 k data_i [31:0] $end
$var wire 32 l addr_i [31:0] $end
$var wire 1 N MemWrite_i $end
$var wire 1 O MemRead_i $end
$upscope $end
$scope module EXMEM $end
$var wire 32 m ALU_Result_i [31:0] $end
$var wire 1 ! clk_i $end
$var wire 1 # start_i $end
$var wire 1 > RegWrite_i $end
$var wire 5 n RdAddr_i [4:0] $end
$var wire 1 D MemtoReg_i $end
$var wire 1 E MemWrite_i $end
$var wire 32 o MemWrite_Data_i [31:0] $end
$var wire 1 F MemRead_i $end
$var reg 32 p ALU_Result_o [31:0] $end
$var reg 1 O MemRead_o $end
$var reg 32 q MemWrite_Data_o [31:0] $end
$var reg 1 N MemWrite_o $end
$var reg 1 L MemtoReg_o $end
$var reg 5 r RdAddr_o [4:0] $end
$var reg 1 J RegWrite_o $end
$upscope $end
$scope module Equal $end
$var wire 1 I equal_o $end
$var wire 32 s data2_i [31:0] $end
$var wire 32 t data1_i [31:0] $end
$upscope $end
$scope module IDEX $end
$var wire 2 u ALUOp_i [1:0] $end
$var wire 1 V ALUSrc_i $end
$var wire 1 T MemRead_i $end
$var wire 1 S MemWrite_i $end
$var wire 1 R MemtoReg_i $end
$var wire 5 v RS1Addr_i [4:0] $end
$var wire 5 w RS2Addr_i [4:0] $end
$var wire 5 x RdAddr_i [4:0] $end
$var wire 1 Q RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 10 y funct_i [9:0] $end
$var wire 1 # start_i $end
$var wire 32 z SignExtended_i [31:0] $end
$var wire 32 { RS2Data_i [31:0] $end
$var wire 32 | RS1Data_i [31:0] $end
$var reg 2 } ALUOp_o [1:0] $end
$var reg 1 G ALUSrc_o $end
$var reg 1 F MemRead_o $end
$var reg 1 E MemWrite_o $end
$var reg 1 D MemtoReg_o $end
$var reg 5 ~ RS1Addr_o [4:0] $end
$var reg 32 !" RS1Data_o [31:0] $end
$var reg 5 "" RS2Addr_o [4:0] $end
$var reg 32 #" RS2Data_o [31:0] $end
$var reg 5 $" RdAddr_o [4:0] $end
$var reg 1 > RegWrite_o $end
$var reg 32 %" SignExtended_o [31:0] $end
$var reg 10 &" funct_o [9:0] $end
$upscope $end
$scope module IFID $end
$var wire 1 X Flush_i $end
$var wire 1 '" Stall_i $end
$var wire 1 ! clk_i $end
$var wire 1 # start_i $end
$var wire 32 (" pc_i [31:0] $end
$var wire 32 )" instr_i [31:0] $end
$var reg 32 *" instr_o [31:0] $end
$var reg 32 +" pc_o [31:0] $end
$upscope $end
$scope module Instruction_Memory $end
$var wire 32 ," instr_o [31:0] $end
$var wire 32 -" addr_i [31:0] $end
$upscope $end
$scope module MEMWB $end
$var wire 32 ." MemAddr_i [31:0] $end
$var wire 32 /" MemRead_Data_i [31:0] $end
$var wire 1 L MemtoReg_i $end
$var wire 5 0" RdAddr_i [4:0] $end
$var wire 1 J RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 # start_i $end
$var reg 32 1" MemAddr_o [31:0] $end
$var reg 32 2" MemRead_Data_o [31:0] $end
$var reg 1 7 MemtoReg_o $end
$var reg 5 3" RdAddr_o [4:0] $end
$var reg 1 5 RegWrite_o $end
$upscope $end
$scope module MUX_ALUSrc $end
$var wire 32 4" data1_i [31:0] $end
$var wire 32 5" data2_i [31:0] $end
$var wire 1 G select_i $end
$var wire 32 6" data_o [31:0] $end
$upscope $end
$scope module MUX_MemtoReg $end
$var wire 32 7" data1_i [31:0] $end
$var wire 32 8" data2_i [31:0] $end
$var wire 1 7 select_i $end
$var wire 32 9" data_o [31:0] $end
$upscope $end
$scope module MUX_PC $end
$var wire 32 :" data1_i [31:0] $end
$var wire 32 ;" data2_i [31:0] $end
$var wire 1 X select_i $end
$var wire 32 <" data_o [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 =" PCWrite_i $end
$var wire 1 ! clk_i $end
$var wire 32 >" pc_i [31:0] $end
$var wire 1 " rst_i $end
$var wire 1 # start_i $end
$var reg 32 ?" pc_o [31:0] $end
$upscope $end
$scope module Registers $end
$var wire 5 @" RDaddr_i [4:0] $end
$var wire 32 A" RDdata_i [31:0] $end
$var wire 5 B" RS1addr_i [4:0] $end
$var wire 5 C" RS2addr_i [4:0] $end
$var wire 1 5 RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 32 D" RS2data_o [31:0] $end
$var wire 32 E" RS1data_o [31:0] $end
$upscope $end
$scope module Shift_Left $end
$var wire 32 F" data_o [31:0] $end
$var wire 32 G" data_i [31:0] $end
$upscope $end
$scope module Sign_Extend $end
$var wire 32 H" data_i [31:0] $end
$var reg 32 I" data_o [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx I"
b0 H"
bx G"
bx0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b100 >"
1="
b100 <"
bx ;"
b100 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b101100000000001010010011 ,"
b0 +"
b0 *"
b101100000000001010010011 )"
b0 ("
0'"
b0 &"
b0 %"
b0 $"
b0 #"
bx ""
b0 !"
bx ~
b0 }
b0 |
b0 {
bx z
b0 y
b0 x
b0 w
b0 v
bx u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
bx i
b0 h
b0 g
b100 f
b100 e
bx0 d
b0 c
bx b
b110 a
b0 `
b0 _
b0 ^
b110 ]
b0 \
b0 [
b110 Z
b0 Y
0X
bx W
xV
0U
xT
xS
xR
xQ
b0 P
0O
0N
b0 M
0L
b0 K
0J
1I
b0 H
0G
0F
0E
0D
b0 C
bx B
b0 A
bx @
b0 ?
0>
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
07
b0 6
05
b0 4
b0 3
b100 2
b0 1
bx 0
b100 /
b0 .
b0 -
b0 ,
bx0 +
bx *
b101100000000001010010011 )
b0 (
b11 '
b100000 &
b0 %
b0 $
0#
1"
1!
$end
#12
1#
0"
#25
0!
#50
bx Y
bx ^
bx m
b10110 0
b10110 b
b10110 ;"
b10110 +
b10110 d
b10110 F"
1V
b0 W
b0 i
b0 u
0S
0T
0R
1Q
bx 4
bx [
bx 6"
b1011 *
b1011 z
b1011 G"
b1011 I"
b1011 w
b101 x
b1011 C"
b10011 h
b101000000000001100010011 )
b101000000000001100010011 )"
b101000000000001100010011 ,"
b1000 2
b1000 <"
b1000 >"
xG
bx H
bx `
bx }
xE
xF
xD
x>
b0 @
b0 ""
b0 B
b0 ~
bx =
bx %"
bx 5"
b101100000000001010010011 ;
b101100000000001010010011 *"
b101100000000001010010011 H"
b1000 /
b1000 f
b1000 :"
b100 .
b100 g
b100 ("
b100 -"
b100 ?"
b1 $
1!
#75
0!
#100
b1011 Y
b1011 ^
b1011 m
b10100 +
b10100 d
b10100 F"
b1010 *
b1010 z
b1010 G"
b1010 I"
b1010 w
b110 x
b1010 C"
b1011 4
b1011 [
b1011 6"
bx 1
bx j
bx /"
b100010111100000011 )
b100010111100000011 )"
b100010111100000011 ,"
b1100 2
b1100 <"
b1100 >"
b11000 0
b11000 b
b11000 ;"
b100 :
b100 c
b100 +"
b101000000000001100010011 ;
b101000000000001100010011 *"
b101000000000001100010011 H"
1G
b0 H
b0 `
b0 }
0E
0F
0D
1>
b1011 @
b1011 ""
b101 C
b101 n
b101 $"
b1011 =
b1011 %"
b1011 5"
xN
xO
xL
xJ
bx P
bx l
bx p
bx ."
b1100 /
b1100 f
b1100 :"
b1000 .
b1000 g
b1000 ("
b1000 -"
b1000 ?"
b10 $
1!
#125
0!
#150
b1010 Y
b1010 ^
b1010 m
xI
bx ,
bx s
bx {
bx D"
b0 +
b0 d
b0 F"
1T
1R
bx 3
bx 9"
bx A"
b0 1
b0 j
b0 /"
b1010 4
b1010 [
b1010 6"
b0 *
b0 z
b0 G"
b0 I"
b0 w
b100 v
b11110 x
b10 y
b0 C"
b100 B"
b11 h
b111100000000001110010011 )
b111100000000001110010011 )"
b111100000000001110010011 ,"
b10000 2
b10000 <"
b10000 >"
x7
x5
bx 8
bx 2"
bx 8"
bx 9
bx 1"
bx 7"
0N
0O
0L
1J
b101 K
b101 r
b101 0"
b1011 P
b1011 l
b1011 p
b1011 ."
b1010 @
b1010 ""
b110 C
b110 n
b110 $"
b1010 =
b1010 %"
b1010 5"
b1000 0
b1000 b
b1000 ;"
b1000 :
b1000 c
b1000 +"
b100010111100000011 ;
b100010111100000011 *"
b100010111100000011 H"
b10000 /
b10000 f
b10000 :"
b1100 .
b1100 g
b1100 ("
b1100 -"
b1100 ?"
b11 $
1!
#175
0!
#200
b0 Y
b0 ^
b0 m
b1000 Z
b1000 ]
b1000 a
1I
b11110 +
b11110 d
b11110 F"
0T
0R
b0 ,
b0 s
b0 {
b0 D"
b1111 *
b1111 z
b1111 G"
b1111 I"
b1111 w
b0 v
b111 x
b0 y
b1111 C"
b0 B"
b10011 h
b0 4
b0 [
b0 6"
b1011 3
b1011 9"
b1011 A"
b1100000000010000010011 )
b1100000000010000010011 )"
b1100000000010000010011 ,"
b10100 2
b10100 <"
b10100 >"
b101010 0
b101010 b
b101010 ;"
b1100 :
b1100 c
b1100 +"
b111100000000001110010011 ;
b111100000000001110010011 *"
b111100000000001110010011 H"
1F
1D
b0 @
b0 ""
b100 B
b100 ~
b11110 C
b11110 n
b11110 $"
b10 <
b10 _
b10 &"
b0 =
b0 %"
b0 5"
bx ?
bx o
bx #"
bx 4"
b110 K
b110 r
b110 0"
b1010 P
b1010 l
b1010 p
b1010 ."
07
15
b101 6
b101 3"
b101 @"
b0 8
b0 2"
b0 8"
b1011 9
b1011 1"
b1011 7"
b10100 /
b10100 f
b10100 :"
b10000 .
b10000 g
b10000 ("
b10000 -"
b10000 ?"
b100 $
1!
#225
0!
#250
b1111 Y
b1111 ^
b1111 m
b110 Z
b110 ]
b110 a
b110 +
b110 d
b110 F"
b1010 3
b1010 9"
b1010 A"
b101 1
b101 j
b101 /"
b1111 4
b1111 [
b1111 6"
b11 *
b11 z
b11 G"
b11 I"
b11 w
b1000 x
b11 C"
b101100010010110011 )
b101100010010110011 )"
b101100010010110011 ,"
b11000 2
b11000 <"
b11000 >"
b110 6
b110 3"
b110 @"
b1010 9
b1010 1"
b1010 7"
1O
1L
b11110 K
b11110 r
b11110 0"
bx M
bx k
bx q
b0 P
b0 l
b0 p
b0 ."
0F
0D
b1111 @
b1111 ""
b0 B
b0 ~
b111 C
b111 n
b111 $"
b0 <
b0 _
b0 &"
b1111 =
b1111 %"
b1111 5"
b0 ?
b0 o
b0 #"
b0 4"
b10110 0
b10110 b
b10110 ;"
b10000 :
b10000 c
b10000 +"
b1100000000010000010011 ;
b1100000000010000010011 *"
b1100000000010000010011 H"
b11000 /
b11000 f
b11000 :"
b10100 .
b10100 g
b10100 ("
b10100 -"
b10100 ?"
b101 $
1!
#275
0!
#300
b11 Y
b11 ^
b11 m
0I
b0 +
b0 d
b0 F"
b1011 -
b1011 t
b1011 |
b1011 E"
0V
b10 W
b10 i
b10 u
b0 *
b0 z
b0 G"
b0 I"
b0 w
b101 v
b1001 x
b100 y
b0 C"
b101 B"
b110011 h
b11 4
b11 [
b11 6"
b0 1
b0 j
b0 /"
b101 3
b101 9"
b101 A"
b11000101111111000110011 )
b11000101111111000110011 )"
b11000101111111000110011 ,"
b11100 2
b11100 <"
b11100 >"
b10100 0
b10100 b
b10100 ;"
b10100 :
b10100 c
b10100 +"
b101100010010110011 ;
b101100010010110011 *"
b101100010010110011 H"
b11 @
b11 ""
b1000 C
b1000 n
b1000 $"
b11 =
b11 %"
b11 5"
0O
0L
b111 K
b111 r
b111 0"
b0 M
b0 k
b0 q
b1111 P
b1111 l
b1111 p
b1111 ."
17
b11110 6
b11110 3"
b11110 @"
b101 8
b101 2"
b101 8"
b0 9
b0 1"
b0 7"
b11100 /
b11100 f
b11100 :"
b11000 .
b11000 g
b11000 ("
b11000 -"
b11000 ?"
b110 $
1!
#325
0!
#350
b1 Z
b1 ]
b1 a
b1011 Y
b1011 ^
b1011 m
b1010 ,
b1010 s
b1010 {
b1010 D"
b1111 3
b1111 9"
b1111 A"
b0 4
b0 [
b0 6"
b110 w
b11100 x
b111 y
b110 C"
b1000000011000101000010000110011 )
b1000000011000101000010000110011 )"
b1000000011000101000010000110011 ,"
b100000 2
b100000 <"
b100000 >"
07
b111 6
b111 3"
b111 @"
b0 8
b0 2"
b0 8"
b1111 9
b1111 1"
b1111 7"
b1000 K
b1000 r
b1000 0"
b11 P
b11 l
b11 p
b11 ."
0G
b10 H
b10 `
b10 }
b0 @
b0 ""
b101 B
b101 ~
b1001 C
b1001 n
b1001 $"
b100 <
b100 _
b100 &"
b0 =
b0 %"
b0 5"
b1011 A
b1011 \
b1011 !"
b11000 0
b11000 b
b11000 ;"
b11000 :
b11000 c
b11000 +"
b11000101111111000110011 ;
b11000101111111000110011 *"
b11000101111111000110011 H"
b100000 /
b100000 f
b100000 :"
b11100 .
b11100 g
b11100 ("
b11100 -"
b11100 ?"
b111 $
1!
#375
0!
#400
b1010 Y
b1010 ^
b1010 m
b0 Z
b0 ]
b0 a
b1000 x
b100000000 y
b1010 4
b1010 [
b1010 6"
b11 3
b11 9"
b11 A"
b10011000110000111010110011 )
b10011000110000111010110011 )"
b10011000110000111010110011 ,"
b100100 2
b100100 <"
b100100 >"
b11100 0
b11100 b
b11100 ;"
b11100 :
b11100 c
b11100 +"
b1000000011000101000010000110011 ;
b1000000011000101000010000110011 *"
b1000000011000101000010000110011 H"
b110 @
b110 ""
b11100 C
b11100 n
b11100 $"
b111 <
b111 _
b111 &"
b1010 ?
b1010 o
b1010 #"
b1010 4"
b1001 K
b1001 r
b1001 0"
b1011 P
b1011 l
b1011 p
b1011 ."
b1000 6
b1000 3"
b1000 @"
b11 9
b11 1"
b11 7"
b100100 /
b100100 f
b100100 :"
b100000 .
b100000 g
b100000 ("
b100000 -"
b100000 ?"
b1000 $
1!
#425
0!
#450
b1 Y
b1 ^
b1 m
b100 Z
b100 ]
b100 a
1I
b1010 -
b1010 t
b1010 |
b1010 E"
b1011 3
b1011 9"
b1011 A"
b110 v
b11101 x
b1000 y
b110 B"
b10011101001000111100110011 )
b10011101001000111100110011 )"
b10011101001000111100110011 ,"
b101000 2
b101000 <"
b101000 >"
b1001 6
b1001 3"
b1001 @"
b1011 9
b1011 1"
b1011 7"
b11100 K
b11100 r
b11100 0"
b1010 M
b1010 k
b1010 q
b1010 P
b1010 l
b1010 p
b1010 ."
b1000 C
b1000 n
b1000 $"
b100000000 <
b100000000 _
b100000000 &"
b100000 0
b100000 b
b100000 ;"
b100000 :
b100000 c
b100000 +"
b10011000110000111010110011 ;
b10011000110000111010110011 *"
b10011000110000111010110011 H"
b101000 /
b101000 f
b101000 :"
b100100 .
b100100 g
b100100 ("
b100100 -"
b100100 ?"
b1001 $
1!
#475
0!
#500
b101 Z
b101 ]
b101 a
b1100100 Y
b1100100 ^
b1100100 m
0I
b1111 ,
b1111 s
b1111 {
b1111 D"
b1011 -
b1011 t
b1011 |
b1011 E"
b111 w
b1001 v
b11110 x
b111 C"
b1001 B"
b1010 3
b1010 9"
b1010 A"
b100100101010001010100011 )
b100100101010001010100011 )"
b100100101010001010100011 ,"
b101100 2
b101100 <"
b101100 >"
b100100 0
b100100 b
b100100 ;"
b100100 :
b100100 c
b100100 +"
b10011101001000111100110011 ;
b10011101001000111100110011 *"
b10011101001000111100110011 H"
b110 B
b110 ~
b11101 C
b11101 n
b11101 $"
b1000 <
b1000 _
b1000 &"
b1010 A
b1010 \
b1010 !"
b1000 K
b1000 r
b1000 0"
b1 P
b1 l
b1 p
b1 ."
b11100 6
b11100 3"
b11100 @"
b1010 9
b1010 1"
b1010 7"
b101100 /
b101100 f
b101100 :"
b101000 .
b101000 g
b101000 ("
b101000 -"
b101000 ?"
b1010 $
1!
#525
0!
#550
b10100101 Y
b10100101 ^
b10100101 m
1I
b1010 +
b1010 d
b1010 F"
b1011 ,
b1011 s
b1011 {
b1011 D"
1V
b1 W
b1 i
b1 u
1S
0Q
b1 3
b1 9"
b1 A"
b1111 4
b1111 [
b1111 6"
b101 *
b101 z
b101 G"
b101 I"
b1001 w
b101 v
b101 x
b10 y
b1001 C"
b101 B"
b100011 h
b0 )
b0 )"
b0 ,"
b110000 2
b110000 <"
b110000 >"
b1000 6
b1000 3"
b1000 @"
b1 9
b1 1"
b1 7"
b11101 K
b11101 r
b11101 0"
b1100100 P
b1100100 l
b1100100 p
b1100100 ."
b111 @
b111 ""
b1001 B
b1001 ~
b11110 C
b11110 n
b11110 $"
b1111 ?
b1111 o
b1111 #"
b1111 4"
b1011 A
b1011 \
b1011 !"
b110010 0
b110010 b
b110010 ;"
b101000 :
b101000 c
b101000 +"
b100100101010001010100011 ;
b100100101010001010100011 *"
b100100101010001010100011 H"
b110000 /
b110000 f
b110000 :"
b101100 .
b101100 g
b101100 ("
b101100 -"
b101100 ?"
b1011 $
1!
#575
0!
#600
b10000 Y
b10000 ^
b10000 m
b1001 Z
b1001 ]
b1001 a
b0 ,
b0 s
b0 {
b0 D"
b0 -
b0 t
b0 |
b0 E"
b0 w
b0 v
b0 x
b0 y
b0 C"
b0 B"
b0 h
b101 4
b101 [
b101 6"
b1100100 3
b1100100 9"
b1100100 A"
b110100 2
b110100 <"
b110100 >"
b110110 0
b110110 b
b110110 ;"
b101100 :
b101100 c
b101100 +"
b0 ;
b0 *"
b0 H"
1G
b1 H
b1 `
b1 }
1E
0>
b1001 @
b1001 ""
b101 B
b101 ~
b101 C
b101 n
b101 $"
b10 <
b10 _
b10 &"
b101 =
b101 %"
b101 5"
b1011 ?
b1011 o
b1011 #"
b1011 4"
b11110 K
b11110 r
b11110 0"
b1111 M
b1111 k
b1111 q
b10100101 P
b10100101 l
b10100101 p
b10100101 ."
b11101 6
b11101 3"
b11101 @"
b1100100 9
b1100100 1"
b1100100 7"
b110100 /
b110100 f
b110100 :"
b110000 .
b110000 g
b110000 ("
b110000 -"
b110000 ?"
b1100 $
1!
#625
0!
#650
b101 Y
b101 ^
b101 m
b10100101 3
b10100101 9"
b10100101 A"
b111000 2
b111000 <"
b111000 >"
b11110 6
b11110 3"
b11110 @"
b10100101 9
b10100101 1"
b10100101 7"
1N
0J
b101 K
b101 r
b101 0"
b1011 M
b1011 k
b1011 q
b10000 P
b10000 l
b10000 p
b10000 ."
b0 @
b0 ""
b0 B
b0 ~
b0 C
b0 n
b0 $"
b0 <
b0 _
b0 &"
b0 ?
b0 o
b0 #"
b0 4"
b0 A
b0 \
b0 !"
b111010 0
b111010 b
b111010 ;"
b110000 :
b110000 c
b110000 +"
b111000 /
b111000 f
b111000 :"
b110100 .
b110100 g
b110100 ("
b110100 -"
b110100 ?"
b1101 $
1!
#675
0!
#700
b10000 3
b10000 9"
b10000 A"
b111100 2
b111100 <"
b111100 >"
b111110 0
b111110 b
b111110 ;"
b110100 :
b110100 c
b110100 +"
b0 K
b0 r
b0 0"
b0 M
b0 k
b0 q
b101 P
b101 l
b101 p
b101 ."
05
b101 6
b101 3"
b101 @"
b10000 9
b10000 1"
b10000 7"
b111100 /
b111100 f
b111100 :"
b111000 .
b111000 g
b111000 ("
b111000 -"
b111000 ?"
b1110 $
1!
#725
0!
#750
b101 3
b101 9"
b101 A"
b1000000 2
b1000000 <"
b1000000 >"
b0 6
b0 3"
b0 @"
b101 9
b101 1"
b101 7"
b1000010 0
b1000010 b
b1000010 ;"
b111000 :
b111000 c
b111000 +"
b1000000 /
b1000000 f
b1000000 :"
b111100 .
b111100 g
b111100 ("
b111100 -"
b111100 ?"
b1111 $
1!
#775
0!
#800
b1000100 2
b1000100 <"
b1000100 >"
b1000110 0
b1000110 b
b1000110 ;"
b111100 :
b111100 c
b111100 +"
b1000100 /
b1000100 f
b1000100 :"
b1000000 .
b1000000 g
b1000000 ("
b1000000 -"
b1000000 ?"
b10000 $
1!
#825
0!
#850
b1001000 2
b1001000 <"
b1001000 >"
b1001010 0
b1001010 b
b1001010 ;"
b1000000 :
b1000000 c
b1000000 +"
b1001000 /
b1001000 f
b1001000 :"
b1000100 .
b1000100 g
b1000100 ("
b1000100 -"
b1000100 ?"
b10001 $
1!
#875
0!
#900
b1001100 2
b1001100 <"
b1001100 >"
b1001110 0
b1001110 b
b1001110 ;"
b1000100 :
b1000100 c
b1000100 +"
b1001100 /
b1001100 f
b1001100 :"
b1001000 .
b1001000 g
b1001000 ("
b1001000 -"
b1001000 ?"
b10010 $
1!
#925
0!
#950
b1010000 2
b1010000 <"
b1010000 >"
b1010010 0
b1010010 b
b1010010 ;"
b1001000 :
b1001000 c
b1001000 +"
b1010000 /
b1010000 f
b1010000 :"
b1001100 .
b1001100 g
b1001100 ("
b1001100 -"
b1001100 ?"
b10011 $
1!
#975
0!
#1000
b1010100 2
b1010100 <"
b1010100 >"
b1010110 0
b1010110 b
b1010110 ;"
b1001100 :
b1001100 c
b1001100 +"
b1010100 /
b1010100 f
b1010100 :"
b1010000 .
b1010000 g
b1010000 ("
b1010000 -"
b1010000 ?"
b10100 $
1!
#1025
0!
#1050
b1011000 2
b1011000 <"
b1011000 >"
b1011010 0
b1011010 b
b1011010 ;"
b1010000 :
b1010000 c
b1010000 +"
b1011000 /
b1011000 f
b1011000 :"
b1010100 .
b1010100 g
b1010100 ("
b1010100 -"
b1010100 ?"
b10101 $
1!
#1075
0!
#1100
b1011100 2
b1011100 <"
b1011100 >"
b1011110 0
b1011110 b
b1011110 ;"
b1010100 :
b1010100 c
b1010100 +"
b1011100 /
b1011100 f
b1011100 :"
b1011000 .
b1011000 g
b1011000 ("
b1011000 -"
b1011000 ?"
b10110 $
1!
#1125
0!
#1150
b1100000 2
b1100000 <"
b1100000 >"
b1100010 0
b1100010 b
b1100010 ;"
b1011000 :
b1011000 c
b1011000 +"
b1100000 /
b1100000 f
b1100000 :"
b1011100 .
b1011100 g
b1011100 ("
b1011100 -"
b1011100 ?"
b10111 $
1!
#1175
0!
#1200
b1100100 2
b1100100 <"
b1100100 >"
b1100110 0
b1100110 b
b1100110 ;"
b1011100 :
b1011100 c
b1011100 +"
b1100100 /
b1100100 f
b1100100 :"
b1100000 .
b1100000 g
b1100000 ("
b1100000 -"
b1100000 ?"
b11000 $
1!
#1225
0!
#1250
b1101000 2
b1101000 <"
b1101000 >"
b1101010 0
b1101010 b
b1101010 ;"
b1100000 :
b1100000 c
b1100000 +"
b1101000 /
b1101000 f
b1101000 :"
b1100100 .
b1100100 g
b1100100 ("
b1100100 -"
b1100100 ?"
b11001 $
1!
#1275
0!
#1300
b1101100 2
b1101100 <"
b1101100 >"
b1101110 0
b1101110 b
b1101110 ;"
b1100100 :
b1100100 c
b1100100 +"
b1101100 /
b1101100 f
b1101100 :"
b1101000 .
b1101000 g
b1101000 ("
b1101000 -"
b1101000 ?"
b11010 $
1!
#1325
0!
#1350
b1110000 2
b1110000 <"
b1110000 >"
b1110010 0
b1110010 b
b1110010 ;"
b1101000 :
b1101000 c
b1101000 +"
b1110000 /
b1110000 f
b1110000 :"
b1101100 .
b1101100 g
b1101100 ("
b1101100 -"
b1101100 ?"
b11011 $
1!
#1375
0!
#1400
b1110100 2
b1110100 <"
b1110100 >"
b1110110 0
b1110110 b
b1110110 ;"
b1101100 :
b1101100 c
b1101100 +"
b1110100 /
b1110100 f
b1110100 :"
b1110000 .
b1110000 g
b1110000 ("
b1110000 -"
b1110000 ?"
b11100 $
1!
#1425
0!
#1450
b1111000 2
b1111000 <"
b1111000 >"
b1111010 0
b1111010 b
b1111010 ;"
b1110000 :
b1110000 c
b1110000 +"
b1111000 /
b1111000 f
b1111000 :"
b1110100 .
b1110100 g
b1110100 ("
b1110100 -"
b1110100 ?"
b11101 $
1!
#1475
0!
#1500
b1111100 2
b1111100 <"
b1111100 >"
b1111110 0
b1111110 b
b1111110 ;"
b1110100 :
b1110100 c
b1110100 +"
b1111100 /
b1111100 f
b1111100 :"
b1111000 .
b1111000 g
b1111000 ("
b1111000 -"
b1111000 ?"
b11110 $
1!
#1525
0!
#1550
b10000000 2
b10000000 <"
b10000000 >"
b10000010 0
b10000010 b
b10000010 ;"
b1111000 :
b1111000 c
b1111000 +"
b10000000 /
b10000000 f
b10000000 :"
b1111100 .
b1111100 g
b1111100 ("
b1111100 -"
b1111100 ?"
b11111 $
1!
#1575
0!
#1600
b10000100 2
b10000100 <"
b10000100 >"
b10000110 0
b10000110 b
b10000110 ;"
b1111100 :
b1111100 c
b1111100 +"
b10000100 /
b10000100 f
b10000100 :"
b10000000 .
b10000000 g
b10000000 ("
b10000000 -"
b10000000 ?"
b100000 $
1!
#1625
0!
#1650
b10001000 2
b10001000 <"
b10001000 >"
b10001010 0
b10001010 b
b10001010 ;"
b10000000 :
b10000000 c
b10000000 +"
b10001000 /
b10001000 f
b10001000 :"
b10000100 .
b10000100 g
b10000100 ("
b10000100 -"
b10000100 ?"
b100001 $
1!
#1675
0!
#1700
b10001100 2
b10001100 <"
b10001100 >"
b10001110 0
b10001110 b
b10001110 ;"
b10000100 :
b10000100 c
b10000100 +"
b10001100 /
b10001100 f
b10001100 :"
b10001000 .
b10001000 g
b10001000 ("
b10001000 -"
b10001000 ?"
b100010 $
1!
#1725
0!
#1750
b10010000 2
b10010000 <"
b10010000 >"
b10010010 0
b10010010 b
b10010010 ;"
b10001000 :
b10001000 c
b10001000 +"
b10010000 /
b10010000 f
b10010000 :"
b10001100 .
b10001100 g
b10001100 ("
b10001100 -"
b10001100 ?"
b100011 $
1!
#1775
0!
#1800
b10010100 2
b10010100 <"
b10010100 >"
b10010110 0
b10010110 b
b10010110 ;"
b10001100 :
b10001100 c
b10001100 +"
b10010100 /
b10010100 f
b10010100 :"
b10010000 .
b10010000 g
b10010000 ("
b10010000 -"
b10010000 ?"
b100100 $
1!
#1825
0!
#1850
b10011000 2
b10011000 <"
b10011000 >"
b10011010 0
b10011010 b
b10011010 ;"
b10010000 :
b10010000 c
b10010000 +"
b10011000 /
b10011000 f
b10011000 :"
b10010100 .
b10010100 g
b10010100 ("
b10010100 -"
b10010100 ?"
b100101 $
1!
#1875
0!
#1900
b10011100 2
b10011100 <"
b10011100 >"
b10011110 0
b10011110 b
b10011110 ;"
b10010100 :
b10010100 c
b10010100 +"
b10011100 /
b10011100 f
b10011100 :"
b10011000 .
b10011000 g
b10011000 ("
b10011000 -"
b10011000 ?"
b100110 $
1!
#1925
0!
#1950
b10100000 2
b10100000 <"
b10100000 >"
b10100010 0
b10100010 b
b10100010 ;"
b10011000 :
b10011000 c
b10011000 +"
b10100000 /
b10100000 f
b10100000 :"
b10011100 .
b10011100 g
b10011100 ("
b10011100 -"
b10011100 ?"
b100111 $
1!
#1975
0!
#2000
b10100100 2
b10100100 <"
b10100100 >"
b10100110 0
b10100110 b
b10100110 ;"
b10011100 :
b10011100 c
b10011100 +"
b10100100 /
b10100100 f
b10100100 :"
b10100000 .
b10100000 g
b10100000 ("
b10100000 -"
b10100000 ?"
b101000 $
1!
#2025
0!
#2050
b10101000 2
b10101000 <"
b10101000 >"
b10101010 0
b10101010 b
b10101010 ;"
b10100000 :
b10100000 c
b10100000 +"
b10101000 /
b10101000 f
b10101000 :"
b10100100 .
b10100100 g
b10100100 ("
b10100100 -"
b10100100 ?"
b101001 $
1!
#2075
0!
#2100
b10101100 2
b10101100 <"
b10101100 >"
b10101110 0
b10101110 b
b10101110 ;"
b10100100 :
b10100100 c
b10100100 +"
b10101100 /
b10101100 f
b10101100 :"
b10101000 .
b10101000 g
b10101000 ("
b10101000 -"
b10101000 ?"
b101010 $
1!
#2125
0!
#2150
b10110000 2
b10110000 <"
b10110000 >"
b10110010 0
b10110010 b
b10110010 ;"
b10101000 :
b10101000 c
b10101000 +"
b10110000 /
b10110000 f
b10110000 :"
b10101100 .
b10101100 g
b10101100 ("
b10101100 -"
b10101100 ?"
b101011 $
1!
#2175
0!
#2200
b10110100 2
b10110100 <"
b10110100 >"
b10110110 0
b10110110 b
b10110110 ;"
b10101100 :
b10101100 c
b10101100 +"
b10110100 /
b10110100 f
b10110100 :"
b10110000 .
b10110000 g
b10110000 ("
b10110000 -"
b10110000 ?"
b101100 $
1!
#2225
0!
#2250
b10111000 2
b10111000 <"
b10111000 >"
b10111010 0
b10111010 b
b10111010 ;"
b10110000 :
b10110000 c
b10110000 +"
b10111000 /
b10111000 f
b10111000 :"
b10110100 .
b10110100 g
b10110100 ("
b10110100 -"
b10110100 ?"
b101101 $
1!
#2275
0!
#2300
b10111100 2
b10111100 <"
b10111100 >"
b10111110 0
b10111110 b
b10111110 ;"
b10110100 :
b10110100 c
b10110100 +"
b10111100 /
b10111100 f
b10111100 :"
b10111000 .
b10111000 g
b10111000 ("
b10111000 -"
b10111000 ?"
b101110 $
1!
#2325
0!
#2350
b11000000 2
b11000000 <"
b11000000 >"
b11000010 0
b11000010 b
b11000010 ;"
b10111000 :
b10111000 c
b10111000 +"
b11000000 /
b11000000 f
b11000000 :"
b10111100 .
b10111100 g
b10111100 ("
b10111100 -"
b10111100 ?"
b101111 $
1!
#2375
0!
#2400
b11000100 2
b11000100 <"
b11000100 >"
b11000110 0
b11000110 b
b11000110 ;"
b10111100 :
b10111100 c
b10111100 +"
b11000100 /
b11000100 f
b11000100 :"
b11000000 .
b11000000 g
b11000000 ("
b11000000 -"
b11000000 ?"
b110000 $
1!
#2425
0!
#2450
b11001000 2
b11001000 <"
b11001000 >"
b11001010 0
b11001010 b
b11001010 ;"
b11000000 :
b11000000 c
b11000000 +"
b11001000 /
b11001000 f
b11001000 :"
b11000100 .
b11000100 g
b11000100 ("
b11000100 -"
b11000100 ?"
b110001 $
1!
#2475
0!
#2500
b11001100 2
b11001100 <"
b11001100 >"
b11001110 0
b11001110 b
b11001110 ;"
b11000100 :
b11000100 c
b11000100 +"
b11001100 /
b11001100 f
b11001100 :"
b11001000 .
b11001000 g
b11001000 ("
b11001000 -"
b11001000 ?"
b110010 $
1!
#2525
0!
#2550
b11010000 2
b11010000 <"
b11010000 >"
b11010010 0
b11010010 b
b11010010 ;"
b11001000 :
b11001000 c
b11001000 +"
b11010000 /
b11010000 f
b11010000 :"
b11001100 .
b11001100 g
b11001100 ("
b11001100 -"
b11001100 ?"
b110011 $
1!
#2575
0!
#2600
b11010100 2
b11010100 <"
b11010100 >"
b11010110 0
b11010110 b
b11010110 ;"
b11001100 :
b11001100 c
b11001100 +"
b11010100 /
b11010100 f
b11010100 :"
b11010000 .
b11010000 g
b11010000 ("
b11010000 -"
b11010000 ?"
b110100 $
1!
#2625
0!
#2650
b11011000 2
b11011000 <"
b11011000 >"
b11011010 0
b11011010 b
b11011010 ;"
b11010000 :
b11010000 c
b11010000 +"
b11011000 /
b11011000 f
b11011000 :"
b11010100 .
b11010100 g
b11010100 ("
b11010100 -"
b11010100 ?"
b110101 $
1!
#2675
0!
#2700
b11011100 2
b11011100 <"
b11011100 >"
b11011110 0
b11011110 b
b11011110 ;"
b11010100 :
b11010100 c
b11010100 +"
b11011100 /
b11011100 f
b11011100 :"
b11011000 .
b11011000 g
b11011000 ("
b11011000 -"
b11011000 ?"
b110110 $
1!
#2725
0!
#2750
b11100000 2
b11100000 <"
b11100000 >"
b11100010 0
b11100010 b
b11100010 ;"
b11011000 :
b11011000 c
b11011000 +"
b11100000 /
b11100000 f
b11100000 :"
b11011100 .
b11011100 g
b11011100 ("
b11011100 -"
b11011100 ?"
b110111 $
1!
#2775
0!
#2800
b11100100 2
b11100100 <"
b11100100 >"
b11100110 0
b11100110 b
b11100110 ;"
b11011100 :
b11011100 c
b11011100 +"
b11100100 /
b11100100 f
b11100100 :"
b11100000 .
b11100000 g
b11100000 ("
b11100000 -"
b11100000 ?"
b111000 $
1!
#2825
0!
#2850
b11101000 2
b11101000 <"
b11101000 >"
b11101010 0
b11101010 b
b11101010 ;"
b11100000 :
b11100000 c
b11100000 +"
b11101000 /
b11101000 f
b11101000 :"
b11100100 .
b11100100 g
b11100100 ("
b11100100 -"
b11100100 ?"
b111001 $
1!
#2875
0!
#2900
b11101100 2
b11101100 <"
b11101100 >"
b11101110 0
b11101110 b
b11101110 ;"
b11100100 :
b11100100 c
b11100100 +"
b11101100 /
b11101100 f
b11101100 :"
b11101000 .
b11101000 g
b11101000 ("
b11101000 -"
b11101000 ?"
b111010 $
1!
#2925
0!
#2950
b11110000 2
b11110000 <"
b11110000 >"
b11110010 0
b11110010 b
b11110010 ;"
b11101000 :
b11101000 c
b11101000 +"
b11110000 /
b11110000 f
b11110000 :"
b11101100 .
b11101100 g
b11101100 ("
b11101100 -"
b11101100 ?"
b111011 $
1!
#2975
0!
#3000
b11110100 2
b11110100 <"
b11110100 >"
b11110110 0
b11110110 b
b11110110 ;"
b11101100 :
b11101100 c
b11101100 +"
b11110100 /
b11110100 f
b11110100 :"
b11110000 .
b11110000 g
b11110000 ("
b11110000 -"
b11110000 ?"
b111100 $
1!
#3025
0!
#3050
b11111000 2
b11111000 <"
b11111000 >"
b11111010 0
b11111010 b
b11111010 ;"
b11110000 :
b11110000 c
b11110000 +"
b11111000 /
b11111000 f
b11111000 :"
b11110100 .
b11110100 g
b11110100 ("
b11110100 -"
b11110100 ?"
b111101 $
1!
#3075
0!
#3100
b11111100 2
b11111100 <"
b11111100 >"
b11111110 0
b11111110 b
b11111110 ;"
b11110100 :
b11110100 c
b11110100 +"
b11111100 /
b11111100 f
b11111100 :"
b11111000 .
b11111000 g
b11111000 ("
b11111000 -"
b11111000 ?"
b111110 $
1!
#3125
0!
#3150
b100000000 2
b100000000 <"
b100000000 >"
b100000010 0
b100000010 b
b100000010 ;"
b11111000 :
b11111000 c
b11111000 +"
b100000000 /
b100000000 f
b100000000 :"
b11111100 .
b11111100 g
b11111100 ("
b11111100 -"
b11111100 ?"
b111111 $
1!
#3175
0!
#3200
b100000100 2
b100000100 <"
b100000100 >"
b100000110 0
b100000110 b
b100000110 ;"
b11111100 :
b11111100 c
b11111100 +"
b100000100 /
b100000100 f
b100000100 :"
b100000000 .
b100000000 g
b100000000 ("
b100000000 -"
b100000000 ?"
b1000000 $
1!
#3225
0!
#3250
b100001000 2
b100001000 <"
b100001000 >"
b100001010 0
b100001010 b
b100001010 ;"
b100000000 :
b100000000 c
b100000000 +"
b100001000 /
b100001000 f
b100001000 :"
b100000100 .
b100000100 g
b100000100 ("
b100000100 -"
b100000100 ?"
1!
